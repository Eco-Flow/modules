nextflow_process {

    name "Test Process MYGENE"
    script "../main.nf"
    process "MYGENE"

    test("mygene - default options") {

        when {
            process {
                """
                input[0] = [
                    [id : 'test'],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.gene_meta.tsv")
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.gmt).match("mygene - default options - gmt") },
                { assert snapshot(process.out.versions).match("mygene - default options - versions") }
            )
        }
    }

    test("mygene - default with tsv file") {

        config "./default_tsv.config"

        when {
            process {
                """
                input[0] = [
                    [id : 'test'],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.gene_meta.tsv")
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.gmt).match("mygene - default with tsv file - gmt") },
                { assert snapshot(process.out.tsv).match("mygene - default with tsv file - tsv") },
                { assert snapshot(process.out.versions).match("mygene - default with tsv file - versions") }
            )
        }
    }

    test("mygene - filter by go category") {

        config "./go_category.config"

        when {
            process {
                """
                input[0] = [
                    [id : 'test'],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.gene_meta.tsv")
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.gmt).match("mygene - filter by go category - gmt") },
                { assert snapshot(process.out.versions).match("mygene - filter by go category - versions") }
            )
        }
    }

    test("mygene - filter by go evidence") {

        config "./go_evidence.config"

        when {
            process {
                """
                input[0] = [
                    [id : 'test'],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.gene_meta.tsv")
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.gmt).match("mygene - filter by go evidence - gmt") },
                { assert snapshot(process.out.versions).match("mygene - filter by go evidence - versions") }
            )
        }
    }
}
